Centralize Data Likelihood Functions:

    I want to be able to use the same likelihood function across models with different kinds of parameters. 

    I'm okay with using different functions for trials that do and don't have different presentation orders, but having a unique function for every model variant that comes to mind is more than a bit tedious.

    The big challenge for this is that numba doesn't support dictionary-based function parametrization as I'd like, so this probably means I'll have to update how I design my models just as much as how I design my likelihood functions.

    First I think I wanna confirm that I can't just pass a dictionary as my argument, one way or another. Having a dictionary contain model parameters would be the neatest way to manage this change.

    I know that I can use typed dictionaries within numba...
    > Numba does not fully support the Python dict because it is an untyped container that can have any Python types as members. To generate efficient machine code, Numba needs the keys and the values of the dictionary to have fixed types, declared in advance. To achieve this, Numba has a typed dictionary, numba.typed.Dict, for which the type-inference mechanism must be able to infer the key-value types by use, or the user must explicitly declare the key-value type using the Dict.empty() constructor method. 

    But how do I configure my model to accept a typed dict as an argument? There's guidance in the jitclass documentation. This could actually save a lot of trouble!

    So what's the approach? CMR now primarily* initializes with a typed dict containing model parameters that are accessed at will to carry out simulations. Alternatively, I might just use the dictionary to populate parameter values.

    My same_trial likelihood function will similarly accept a data_to_fit, item_counts, and a typed parameter dictionary. It will also accept a model class function, something I also know numba supports.

    * I still have to decide if stuff like item count will be treated as a parameter, or something separate. Separate makes sense for a likelihood function where item count can vary.

Goal Tracking:
    - General likelihood function

Small Steps:
    Let's pick some way to push forward.

    I want to make a new function

Thinking:
    What's the smallest useful thing I can do?